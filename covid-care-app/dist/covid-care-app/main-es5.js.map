{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/charts/bar-chart/bar-chart.component.ts","webpack:///src/app/charts/bar-chart/bar-chart.component.html","webpack:///src/app/charts/doughnut-chart/doughnut-chart.component.ts","webpack:///src/app/charts/doughnut-chart/doughnut-chart.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login-page/login-page.component.ts","webpack:///src/app/login-page/login-page.component.html","webpack:///src/app/medical-needy-request/medical-needy-request.component.ts","webpack:///src/app/medical-needy-request/medical-needy-request.component.html","webpack:///src/app/registration-page/registration-page.component.ts","webpack:///src/app/registration-page/registration-page.component.html","webpack:///src/app/service/covid-care.service.ts","webpack:///src/app/shared/model.ts","webpack:///src/app/user-request-page/user-request-page.component.ts","webpack:///src/app/user-request-page/user-request-page.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AdminDashboardComponent","_covidService","isType","allMedicalRequest","allGeneralRequest","displayedColumns","displayedColumns1","dataSource","sortedDataSource","dcLabels","dcData","bcLabels","bcData","bcData1","typeOfUsers","name","selected","panelOpenState","options","diagnosed","userdata1","userdata2","sortedData","getAllMedicalNeed","resetValues","checkMedicalRequests","subscribe","response","medicalChartImplementation","sort","a","b","medicalRequestId","isSuccess","isLoad","pagination","error","isError","checkGeneralRequests","generalChartImplementation","generalRequestId","filter","item","val","groupBy","i","length","push","one","two","bcLabel1","bcLabel2","drugName","label","drugQuantity","count","j","userCity","userState","value","pageRecords","slice","gridData","message","event","option","forEach","getAllGeneralNeed","console","log","pageSize","pageEvent","start","pageIndex","end","type","active","direction","isAsc","compare","patientName","patientNeeds","patientPhoneNumber","patientCity","userName","userNeeds","isEmergency","goodsName","phoneNumber","nextPage","role","errorMessage","userId","undefined","user","Role","userRole","changeState","rest","setRole","selector","templateUrl","styleUrls","array","f","groups","group","JSON","stringify","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","declarations","providers","bootstrap","BarChartComponent","barChartOptions","scaleShowVerticalLines","responsive","barChartColors","backgroundColor","barChartType","barChartLegend","barChartData","data","barchartData1","barchartLabel1","barchartData2","barchartLabel2","DoughnutChartComponent","doughnutChartType","donutColors","FooterComponent","HeaderComponent","router","parse","localStorage","getItem","clear","navigateByUrl","signOut","SafePipe","sanitizer","url","bypassSecurityTrustResourceUrl","HomeComponent","isPlay","video","isSubmitted","needySubmissionStatus","MyErrorStateMatcher","control","form","submitted","invalid","dirty","touched","LoginPageComponent","emailFormControl","required","email","hide","matcher","auth","checkUserCredentials","Message","setItem","UserName","login","MedicalNeedyRequestComponent","postMedicalRequestData","medicalNeedy","RegistrationPageComponent","hasError","postUseRegistration","register","header","headers","host","CovidCareService","_http","http","apiUrl","userReg","post","pipe","json","loginData","password","get","userData","providedIn","Registration","Login","MedicalNeed","GeneralNeed","UserRequestPageComponent","postGenralRequestData","generalNeedy","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Sort, MatSort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSelectionListChange } from '@angular/material/list';\n\nimport { GeneralNeed, MedicalNeed, Role} from '../shared/model';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CovidCareService } from '../service/covid-care.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  public gridData: any;\n  userId: string;\n  userRole: string;\n  isType: string = 'Medical Need';\n\n  allMedicalRequest: MedicalNeed[] = [];\n  allGeneralRequest: GeneralNeed[] = [];\n\n  isLoad: boolean;\n  isSuccess: boolean;\n  isError: boolean;\n  message: string;\n  errorMessage: string;\n  pageEvent: PageEvent;\n\n  displayedColumns: string[] = ['medicalRequestId', 'patientName', 'diagnosed', 'patientNeeds', 'drugName', 'patientPhoneNumber', 'patientCity'];\n  displayedColumns1: string[] = ['generalRequestId', 'userName', 'userNeeds', 'isEmergency', 'goodsName', 'phoneNumber'];\n\n  dataSource = new MatTableDataSource();\n  sortedDataSource = new MatTableDataSource();\n\n  @ViewChild(MatSort) sort: MatSort;\n  bcLabel1: string;\n  bcLabel2: string;\n\n  dcLabels: string[] = [];\n  dcData: number[] = [];\n  bcLabels: string[] = [];\n  bcData: number[] = [];\n  bcData1: number[] = [];\n  typeOfUsers: { name: string; selected: boolean; }[] = [\n    {\n      name: 'Medical Need',\n      selected: true\n    },\n    {\n      name: 'General Need',\n      selected: false\n    }\n  ];\n  panelOpenState = true;\n\n  options: string[] = ['Guest', 'Admin'];\n\n  public diagnosed: any[] = [];\n  public userdata1: any[] = [];\n  public userdata2: any[] = [];\n\n  constructor(private _covidService: CovidCareService) {\n  }\n\n  ngOnInit() {\n    this.getAllMedicalNeed();\n  }\n\n  getAllMedicalNeed() {\n    this.resetValues();\n    this._covidService.checkMedicalRequests().subscribe((response: MedicalNeed[]) => {\n      if (response) {\n        this.allMedicalRequest = response;\n          this.medicalChartImplementation();\n          this.allMedicalRequest.sort((a, b) => (a.medicalRequestId > b.medicalRequestId) ? -1 : 1);\n          this.isSuccess = true;\n          this.isLoad = false;\n      }\n      this.pagination(this.allMedicalRequest);\n    },\n      (error: HttpErrorResponse) => {\n        this.isError = true;\n      });\n  }\n\n  getAllGeneralNeed() {\n    this.resetValues();\n    this._covidService.checkGeneralRequests().subscribe((response: GeneralNeed[]) => {\n      if (response) {\n        this.allGeneralRequest = response;\n          this.generalChartImplementation();\n          this.allGeneralRequest.sort((a, b) => (a.generalRequestId > b.generalRequestId) ? -1 : 1);\n          this.isSuccess = true;\n          this.isLoad = false;\n      }\n      this.pagination(this.allGeneralRequest);\n    },\n      (error: HttpErrorResponse) => {\n        this.isError = true;\n      });\n\n  }\n\n  medicalChartImplementation() {\n    /* Doughnut Chart Value Implementation */\n    this.dcLabels = ['Diabetes', 'Cold', 'BP', 'Fever', 'Cough'];\n\n    this.diagnosed = this.allMedicalRequest.filter(item => item.diagnosed !== null).map(val => val.diagnosed);\n    this.diagnosed = groupBy(this.diagnosed, function (item) {\n      return item;\n    });\n\n    for (let i = 0; i < this.diagnosed.length; i++) {\n      this.dcData.push(this.diagnosed[i].length);\n    }\n    this.dcData.sort((one, two) => (one > two ? -1 : 1));\n\n    /* BarChart Value Implementation */\n\n    //this.bcLabels = ['Chennai', 'Pune', 'Coimbatore', 'Singapore', 'United Kingdom'];\n    this.bcLabel1 = \"Drug Name\";\n    this.bcLabel2 = \"Quantity\";\n\n    this.userdata1 = this.allMedicalRequest.filter(item => item.drugName !== '').map(val => val.drugName);\n    this.userdata1 = groupBy(this.userdata1, function (item) {\n      return item;\n    });\n\n    for (let i = 0; i < this.userdata1.length; i++) {\n      let label = this.userdata1[i][0];\n      this.bcLabels.push(label);\n      this.bcData.push(this.userdata1[i].length);\n    }\n\n    for (let i = 0; i < this.bcLabels.length; i++) {\n      this.userdata2.push(this.allMedicalRequest.filter(item => item.drugName === this.bcLabels[i]).map(val => val.drugQuantity));\n    }\n\n    for (let i = 0; i < this.userdata2.length; i++) {\n      let count = 0;\n      for (let j = 0; j < this.userdata2[i].length; j++) {\n        count += this.userdata2[i][j];\n      }\n      this.bcData1.push(count);\n    }\n  }\n\n  generalChartImplementation() {\n    /* BarChart Value Implementation */\n\n    //this.bcLabels = ['Chennai', 'Pune', 'Coimbatore', 'Singapore', 'United Kingdom'];\n    this.bcLabel1 = \"Location\";\n    this.bcLabel2 = \"State\";\n\n    this.userdata1 = this.allGeneralRequest.filter(item => item.userCity !== '').map(val => val.userCity);\n    this.userdata1 = groupBy(this.userdata1, function (item) {\n      return item;\n    });\n\n    for (let i = 0; i < this.userdata1.length; i++) {\n      let label = this.userdata1[i][0];\n      this.bcLabels.push(label);\n      this.bcData.push(this.userdata1[i].length);\n    }\n\n    for (let i = 0; i < this.bcLabels.length; i++) {\n      this.userdata2.push(this.allGeneralRequest.filter(item => item.userCity === this.bcLabels[i]).map(val => val.userState.length));\n    }\n\n    for (let i = 0; i < this.userdata2.length; i++) {\n      let count = 0;\n      for (let j = 0; j < this.userdata2[i].length; j++) {\n        count += this.userdata2[i][j];\n      }\n      this.bcData1.push(count);\n    }\n  }\n\n\n  pagination(value: any) {\n    var pageRecords = value.slice(0, 10);\n    this.dataSource = new MatTableDataSource(pageRecords);\n    this.gridData = value;\n  }\n\n  resetValues() {\n    this.message = '';\n    this.isLoad = true;\n    this.isSuccess = false;\n    this.allGeneralRequest = [];\n    this.allMedicalRequest = [];\n    this.userdata1 = [];\n    this.userdata2 = [];\n    this.dcLabels = [];\n    this.bcLabels = [];\n    this.dcData = [];\n    this.bcData = [];\n    this.bcData1 = [];\n  }\n\n  changeState(event: MatSelectionListChange) {\n    this.gridData = [];\n    this.dataSource = new MatTableDataSource([]);\n\n    this.isType = event.option.value;\n    this.typeOfUsers.forEach(item => {\n      item.selected = (item.name === this.isType) ? true : false;\n    });\n\n    if (this.isType === 'Medical Need') {\n      this.getAllMedicalNeed();\n    }\n    else  {\n      this.getAllGeneralNeed();\n    }\n  }\n\n  nextPage(event: PageEvent) {\n    console.log(event.pageSize);\n    this.pageEvent = event;\n\n    var start = event.pageIndex * event.pageSize;\n    var end = start + event.pageSize;\n\n    var pageRecords = this.gridData.slice(start, end);\n    this.dataSource = new MatTableDataSource(pageRecords);\n\n  }\n\n  sortedData = [];\n\n  sortData(event: Sort, type: string) {\n    if (!event.active || event.direction === '') {\n      this.sortedData = this.gridData;\n      return;\n    }\n\n    this.sortedData = this.gridData.sort((a, b) => {\n      const isAsc = event.direction === 'asc';\n\n      if (type === 'Medical Need') {\n        switch (event.active) {\n          case 'medicalRequestId': return compare(a.medicalRequestId, b.medicalRequestId, isAsc);\n          case 'patientName': return compare(a.patientName, b.patientName, isAsc);\n          case 'diagnosed': return compare(a.diagnosed, b.diagnosed, isAsc);\n          case 'patientNeeds': return compare(a.patientNeeds, b.patientNeeds, isAsc);\n          case 'drugName': return compare(a.drugName, b.drugName, isAsc);\n          case 'patientPhoneNumber': return compare(a.patientPhoneNumber, b.patientPhoneNumber, isAsc);\n          case 'patientCity': return compare(a.patientCity, b.patientCity, isAsc);\n          default: return 0;\n        }\n      }\n      else {\n        switch (event.active) {\n          case 'generalRequestId': return compare(a.generalRequestId, b.generalRequestId, isAsc);\n          case 'userName': return compare(a.userName, b.userName, isAsc);\n          case 'userNeeds': return compare(a.userNeeds, b.userNeeds, isAsc);\n          case 'isEmergency': return compare(a.isEmergency, b.isEmergency, isAsc);\n          case 'goodsName': return compare(a.goodsName, b.goodsName, isAsc);\n          case 'phoneNumber': return compare(a.phoneNumber, b.phoneNumber, isAsc);\n          default: return 0;\n        }\n      }\n    });\n\n    if (this.pageEvent) {\n      this.nextPage(this.pageEvent);\n    }\n    else {\n      this.pageEvent = new PageEvent();\n      this.pageEvent.pageIndex = 0;\n      this.pageEvent.pageSize = 10;\n\n      this.nextPage(this.pageEvent);\n\n    }\n  }\n\n  setRole(role: string) {\n    this.errorMessage = '';\n    this.isError = false;\n    if ((this.userId !== undefined && this.userId !== '') && role !== '') {\n      let user = new Role();\n      user.phoneNumber= this.userId;\n      user.Role = role;\n      this.isSuccess = true;\n      this.message = 'The User Role has been assigned successfully!';\n      this.userId = '';\n      this.userRole = '';\n      // this._covidService.postUserRole(user).subscribe((response: Role) => {\n      //   if (response === null) {\n      //     this.userId = \"\";\n      //     this.isSuccess = true;\n      //     this.message = 'The User Role has been assigned successfully!';\n      //     console.log(this.isSuccess);\n      //   }\n      // },\n      //   (error: HttpErrorResponse) => {\n      //     this.isError = true;\n      //     this.errorMessage = \"oops! Could you please try again after some time!\"\n      //   });\n\n    } else {\n      this.isError = true;\n      this.errorMessage = \"Ahh! You missed something.\";\n    }\n  }\n\n  rest(value: string) {\n    this.errorMessage = (value === undefined || value === '') ? '' : this.errorMessage;\n  }\n\n  // openDialog(): void {\n  //   let modalData = new DialogData();\n  //   modalData.name = this.userInfo.Role;\n  //   modalData.message = \"Please note that, import document should be only in the below format!\"\n\n  //   const dialogRef = this._dialog.open(ModalComponent, {\n  //     data: modalData\n  //   });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.postExcelReport(result);\n  //   });\n  // }\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\nfunction groupBy(array, f) {\n  var groups = {};\n  array.forEach(function (o) {\n    var group = JSON.stringify(f(o));\n    groups[group] = groups[group] || [];\n    groups[group].push(o);\n  });\n  return Object.keys(groups).map(function (group) {\n    return groups[group];\n  })\n}","<app-header></app-header>\n<div class=\"app-container\">\n    <div *ngIf=\"isLoad\" class=\"loding-indicator\">\n        <div class=\"align-center\">\n            <mat-spinner style=\"margin:0 auto;\"></mat-spinner>\n        </div>\n    </div>\n    <div class=\"text-center common-title\">\n        <h1 class=\"title-text\">\n            One platform to monitor all the Covid Care activities!\n        </h1>\n    </div>\n    <div>\n        <h1 class=\"admin-title\">Reports and Dashboard.</h1>\n        <div class=\"app-container theme\">\n            <div class=\"row\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                    <mat-card class=\"quote\">\n                        <h1><a>User Needy: </a>\n                            <span class=\"normal-quote\">Consolidated User Request for their needs and Graphical\n                                Representation of the Covid Care! <a>Moving from “I” to “We”</a>\n                                <mat-icon matSuffix class=\"thump-up\">directions_walk</mat-icon>\n                            </span>\n                        </h1>\n                    </mat-card>\n                </div>\n            </div>\n            <div *ngIf=\"isType == 'Medical Need'\" class=\"row quote spacing\">\n                <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <app-doughnut-chart *ngIf=\"isSuccess\" [chartLabel]=\"dcLabels\" [chartData]=\"dcData\">\n                    </app-doughnut-chart>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-sm-6 section-splitter\">\n                    <app-bar-chart *ngIf=\"isSuccess\" [barChartLabels]=\"bcLabels\" [barchartData1]=\"bcData\"\n                        [barchartLabel1]=\"bcLabel1\" [barchartData2]=\"bcData1\" [barchartLabel2]=\"bcLabel2\">\n                    </app-bar-chart>\n                </div>\n            </div>\n            <div *ngIf=\"isType == 'General Need'\" class=\"row quote spacing\">\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 section-splitter\">\n                        <app-bar-chart *ngIf=\"isSuccess\" [barChartLabels]=\"bcLabels\" [barchartData1]=\"bcData\"\n                            [barchartLabel1]=\"bcLabel1\" [barchartData2]=\"bcData1\" [barchartLabel2]=\"bcLabel2\">\n                        </app-bar-chart>\n                    </div>\n            </div>\n            <br>\n            <div class=\"row quote spacing\">\n                <div class=\"col-lg-2 col-md-2 col-sm-2\">\n                    <div class=\"left-panel\">\n                        <mat-selection-list #users\n                            (selectionChange)=\"(users.selectedOptions.selected.length > 0) ? changeState($event) : null\">\n                            <h1 class=\"pl-3 refiner-title\">Refiner</h1>\n                            <mat-list-option [selected]=\"user.selected\" *ngFor=\"let user of typeOfUsers\"\n                                [value]=\"user.name\">\n                                {{user.name}}\n                            </mat-list-option>\n                        </mat-selection-list>\n                        <p class=\"refiner-leftNav\" Class=\"itowe-container\">\n                            Total Count:\n                            <span class=\"total-count\">{{gridData?.length}}</span>\n                        </p>\n                        <form class=\"example-form\">\n                            <h1 class=\"pl-3 refiner-title\">User Privilege</h1>\n                            <p class=\"pl-3 mb-0\">\n                                <mat-form-field class=\"example-full-width\">\n                                    <input #eId [(ngModel)]=\"userId\" name=\"userId\" type=\"number\" autocomplete=\"off\"\n                                        matInput placeholder=\"User Id\" value=\"\" (focus)=\"rest(eId.value)\">\n                                </mat-form-field>\n                                <br>\n                                <mat-form-field class=\"example-full-width\">\n                                    <input #role [(ngModel)]=\"userRole\" name =\"userRole\" type=\"text\" placeholder=\"Enter the role\" aria-label=\"Number\" matInput>\n                                </mat-form-field>\n                            </p>\n                            <div *ngIf=\"isError && errorMessage != ''\">\n                                <span class=\"pl-3 error-message\">{{errorMessage}}</span>\n                            </div>\n                            <div class=\"refiner-btn\">\n                                <button mat-raised-button color=\"primary\" (click)=\"setRole(role.value)\">Submit</button>\n                            </div>\n                        </form>\n                        <form class=\"example-form\">\n                            <h1 class=\"pl-3 refiner-title\">Did you know?</h1>\n                            <p class=\"mb-0 pl-2 pr-2 normal-quotes\">\n                                <a aria-label=\"Cognizant Outreach\" class=\"docs-button mat-button\" mat-button=\"\"\n                                    routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" target=\"_blank\"\n                                    href=\"https://self4society.mygov.in/\">\n                                    <span class=\"mat-button-wrapper\">\n                                        <img class=\"itowe-logo\" alt=\"outreach\" src=\"../assets/iToWe_logo.jpg\">\n                                    </span>\n                                </a>\n                            </p>\n                        </form>\n                    </div>\n                </div>\n                <div class=\"col-lg-10 col-md-10 col-sm-10\">\n                    <div class=\"row left-panel\">\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 pt-2\">\n                            <h1 class=\"refiner-title\">Look at a Glance! </h1>\n                        </div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                            <mat-paginator [length]=\"gridData?.length\" [pageSize]=\"10\" (page)=\"nextPage($event)\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                    <table *ngIf=\"isType == 'Medical Need'\" class=\"mat-elevation-z8\" mat-table [dataSource]=\"dataSource\"\n                        matSort (matSortChange)=\"sortData($event, isType)\">\n                        <!--- Note that these columns can be defined in any order.\n                          The actual rendered columns are set as a property on the row definition\" -->\n\n                        <!-- Id Column -->\n                        <ng-container matColumnDef=\"medicalRequestId\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.medicalRequestId}} </td>\n                        </ng-container>\n\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"patientName\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.patientName}} </td>\n                        </ng-container>\n\n                        <!-- Event Name Column -->\n                        <ng-container matColumnDef=\"diagnosed\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Patient Disease </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.diagnosed}} </td>\n                        </ng-container>\n\n                        <!-- Ratings Column -->\n                        <ng-container matColumnDef=\"patientNeeds\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Looking for </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.patientNeeds}} </td>\n                        </ng-container>\n\n                        <!-- Location Column -->\n                        <ng-container matColumnDef=\"drugName\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Drug </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.drugName}} </td>\n                        </ng-container>\n\n                        <!-- Project Column -->\n                        <ng-container matColumnDef=\"patientPhoneNumber\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Patient Contact </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.patientPhoneNumber}} </td>\n                        </ng-container>\n\n                        <!-- Project Column -->\n                        <ng-container matColumnDef=\"patientCity\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Patient city </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.patientCity}} </td>\n                            </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                    </table>\n                    <table *ngIf=\"isType == 'General Need'\" class=\"mat-elevation-z8\" mat-table [dataSource]=\"dataSource\"\n                        matSort (matSortChange)=\"sortData($event, isType)\">\n                        <!--- Note that these columns can be defined in any order.\n                          The actual rendered columns are set as a property on the row definition\" -->\n                        displayedColumns1: string[] = ['id', 'userName', 'userNeeds', 'isEmergency', 'goodsName',\n                        'phoneNumber'];\n                        <!-- Id Column -->\n                        <ng-container matColumnDef=\"generalRequestId\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.generalRequestId}} </td>\n                        </ng-container>\n\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"userName\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.userName}} </td>\n                        </ng-container>\n\n                        <!-- Event Name Column -->\n                        <ng-container matColumnDef=\"userNeeds\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Looking for </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.userNeeds}} </td>\n                        </ng-container>\n\n                        <!-- Beneficiary Name Column -->\n                        <ng-container matColumnDef=\"isEmergency\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Emergency </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.isEmergency}} </td>\n                        </ng-container>\n\n                        <!-- Council Name Column -->\n                        <ng-container matColumnDef=\"goodsName\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Product </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.goodsName}} </td>\n                        </ng-container>\n\n                        <!-- Business Unit Column -->\n                        <ng-container matColumnDef=\"phoneNumber\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> User Contact </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.phoneNumber}} </td>\n                        </ng-container> \n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></tr>\n                    </table>\n                    <br>\n                    <div *ngIf=\"!isLoad && gridData?.length == 0\">\n                        <h2 class=\"admin-title ceo-quote\">Cool! There is no data for this item.</h2>\n                    </div>\n                    <div *ngIf=\"isSuccess && message != ''\">\n                        <h2 class=\"admin-title ceo-quote\">{{message}}</h2>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row spacing mat-banner\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                    <mat-card class=\"quote\">\n                        <h1><a>Be The Change: </a>\n                            <span class=\"normal-quote\">Thanks for making this program memorable! We will volunteer\n                                together to change the socitey\n                                <a>BeCognizant</a>\n                                <mat-icon matSuffix class=\"thump-up\">thumb_up</mat-icon>\n                            </span>\n                        </h1>\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { UserRequestPageComponent } from './user-request-page/user-request-page.component';\nimport { MedicalNeedyRequestComponent } from './medical-needy-request/medical-needy-request.component';\n\nconst routes: Routes = [ \n  { path: '', redirectTo: 'CovidCare', pathMatch: 'full' }, \n  { path: 'CovidCare', component: HomeComponent },\n  { path: 'register', component: RegistrationPageComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'dashboard', component: AdminDashboardComponent},\n  { path: 'generalRequest', component: UserRequestPageComponent}, \n  { path: 'medicalRequest', component: MedicalNeedyRequestComponent },\n  { path: '**', redirectTo: 'CovidCare', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid-care';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div>  \n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent, SafePipe} from './home/home.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { UserRequestPageComponent } from './user-request-page/user-request-page.component';\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule} from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MedicalNeedyRequestComponent } from './medical-needy-request/medical-needy-request.component';\nimport { BarChartComponent } from './charts/bar-chart/bar-chart.component';\nimport { DoughnutChartComponent } from './charts/doughnut-chart/doughnut-chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent, SafePipe,\n    AdminDashboardComponent,\n    UserRequestPageComponent,\n    RegistrationPageComponent,\n    LoginPageComponent,\n    MedicalNeedyRequestComponent,\n    BarChartComponent,\n    DoughnutChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    ChartsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatCardModule,\n    MatListModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [HttpClientModule, { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css']\n})\nexport class BarChartComponent implements OnInit {\n  @Input() barChartLabels;\n  @Input() barchartLabel1 : string;\n  @Input() barchartData1;\n  @Input() barchartLabel2: string;\n  @Input() barchartData2;\n\n  public barChartOptions = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  public barChartColors: any[] = [\n    { backgroundColor: '#3f51b5' },\n    { backgroundColor: '#2ec866' },\n  ]  \n  public barChartType = 'bar';\n  public barChartLegend = true;\n  public barChartData = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.barChartData = [\n      {data: this.barchartData1, label: this.barchartLabel1},\n      {data: this.barchartData2, label: this.barchartLabel2}\n    ]\n  }\n}\n","<div>\n    <div style=\"display: block\">\n        <canvas baseChart [datasets]=\"barChartData\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\"\n            [legend]=\"barChartLegend\" [colors]=\"barChartColors\" [chartType]=\"barChartType\">\n        </canvas>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.css']\n})\nexport class DoughnutChartComponent implements OnInit {\n\n  @Input() chartLabel;\n  @Input()  chartData;\n\n  public doughnutChartType = 'doughnut';\n  public donutColors = [ { backgroundColor: [ '#FF69B4', '#2ec866', '#9400D3', '#00bfff','#FF0000' ]}]; \n\n  constructor() { }\n\n  ngOnInit() { \n  }\n\n}\n","<div style=\"display: block\">\n    <canvas baseChart [data]=\"chartData\" [labels]=\"chartLabel\" [colors]=\"donutColors\"\n        [chartType]=\"doughnutChartType\"></canvas>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"app-nav\">\n    <a aria-label=\"ibm-label\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\"\n        aria-disabled=\"false\" target=\"_blank\" href=\"https://www.ibm.com/in-en/about/covid19\">\n        <span class=\"mat-button-wrapper\">\n            <img class=\"logo\" alt=\"ibm\" src=\"../assets/ibm-logo.png\">\n        </span>\n    </a>\n    <div class=\"flex-spacer center-align\">\n        <a aria-label=\"twitter-label\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\"\n            aria-disabled=\"false\" target=\"_blank\" href=\"https://twitter.com/CallforCode?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">\n            <span class=\"mat-button-wrapper\" style=\"padding-left: 7.5rem\">\n                <img class=\"logo\" alt=\"twitter\" src=\"../assets/twitter-logo.png\">\n            </span>\n        </a>\n    </div>\n    <a aria-label=\"cognizant-label\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\"\n        aria-disabled=\"false\" target=\"_blank\" href=\"https://news.cognizant.com/2020-04-01-Cognizant-Philanthropies-Commit-10-Million-to-Support-Communities-Worldwide-Impacted-by-COVID-19\">\n        <span class=\"mat-button-wrapper\">\n            <img class=\"logo\" alt=\"cts\" src=\"../assets/cognizant-logo.png\">\n        </span>\n    </a>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  userName: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.userName = JSON.parse(localStorage.getItem(\"userInfo\"));\n  }\n\n  signOut() {\n    localStorage.clear();\n    this.router.navigateByUrl('/login');   \n  }\n}\n","<nav class=\"app-nav\">\n    <a aria-label=\"Covid Care\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" href=\"/home\">\n      <span class=\"mat-button-wrapper\">\n        <img alt=\"cts\" class=\"logo\" src=\"../assets/cognizant-logo.png\"> \n        <span class=\"brand-text\">Supports</span> \n      </span>       \n    </a>\n    <a aria-label=\"Covid Care\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" target=\"_blank\" href=\"https://developer.ibm.com/callforcode/\">\n        <span class=\"mat-button-wrapper\">\n            <img alt=\"ibm\" class=\"logo\" src=\"../assets/ibm-logo.png\">\n            <span class=\"brand-text\">Call for Code</span>         \n        </span>       \n    </a>\n    <div class=\"flex-spacer\"></div> \n    <a *ngIf=\"userName == 'AdminUser'\" aria-label=\"Covid Care\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" href=\"/dashboard\">\n      <span class=\"mat-button-wrapper\">\n          <span class=\"brand-text\">Dashboard</span>         \n      </span>       \n    </a>\n    <a aria-label=\"Covid Care\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" href=\"/medicalRequest\">\n        <span class=\"mat-button-wrapper\">\n            <span class=\"brand-text\">Medical Need</span>         \n        </span>       \n    </a>\n    <a aria-label=\"Covid Care\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" href=\"/generalRequest\">\n      <span class=\"mat-button-wrapper\">\n          <span class=\"brand-text\">General Need</span>         \n      </span>       \n    </a>\n    <img alt=\"user\" class=\"user-profile\" src=\"../assets/user-profile.png\">    \n    <button *ngIf=\"userName != null\" mat-button [matMenuTriggerFor]=\"menu\">{{userName}}</button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item >User Profile</button>\n      <button mat-menu-item (click)=\"signOut()\">Logout</button>\n    </mat-menu> \n    <a *ngIf=\"userName == null\"aria-label=\"Covid Care\" class=\"docs-button mat-button\" mat-button=\"\" routerlink=\"/\" tabindex=\"0\" aria-disabled=\"false\" href=\"/register\">\n        <span class=\"mat-button-wrapper\">\n          <span class=\"brand-text\">Sign Up</span> \n        </span>       \n    </a>   \n  </nav>","import { Component, ViewEncapsulation, ViewChild, ElementRef, PipeTransform, Pipe, OnInit, AfterViewInit } from '@angular/core';\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { CovidCareService } from '../service/covid-care.service';\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  isSubmitted: boolean;\n  isPlay: boolean = true;\n  @ViewChild(\"thankCard\") thankElement: ElementRef;\n  @ViewChild(\"teaser\") videoElement: ElementRef;\n\n  video: string = \"https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\"\n  constructor(private _covidService: CovidCareService) { }\n\n  ngOnInit(): void {\n    this.isSubmitted = this._covidService.needySubmissionStatus;\n    this._covidService.needySubmissionStatus = false;\n  //   this.videoElement.nativeElement.muted = true;\n\n  //   if (this._covidService.needySubmissionStatus) {\n  //     let element = this.thankElement.nativeElement;\n  //     element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  //   }\n  //   this._covidService.needySubmissionStatus = false;\n   }\n}\n","<app-header></app-header>\n<div class=\"app-container theme\">\n    <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 home-banner\"></div>\n    </div>\n    <div class=\"row spacing\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n            <mat-card class=\"quote\">\n                <h1><a>Stay Home: </a>\n                    <span class=\"normal-quote\">Welcome to the Covid Care WebApp! Yeah, you can monitor all action items,\n                        active cases dasboard here.\n                        <a>Stay Safe</a>\n                        <mat-icon matSuffix class=\"thump-up\">thumb_up</mat-icon>\n                    </span>\n                </h1>\n            </mat-card>\n        </div>\n    </div>\n    <br>\n    <div id=\"dialog\">\n        <iframe frameborder=\"0\" width=\"100%\" height=\"1024px\" [src]=\"video | safe\"> </iframe>\n    </div>\n    <div class=\"row spacing\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 who-banner\"></div>\n    </div>\n    <div class=\"row spacing\">\n        <div class=\"col-lg-6 col-md-6 col-sm-6 \">\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"who-health-thought\" src=\"../assets/who-safety-precaution.jpeg\">\n            </div>\n        </div>\n        <div class=\"col-lg-6 col-md-6 col-sm-6 section-splitter\">\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"tn-health-thought\" src=\"../assets/covid-cm-fund.jpg\">\n            </div>\n            <br>\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"tn-health-thought\" src=\"../assets/covid-pm-fund.png\">\n            </div>\n            <br>\n            <h1 style=\"color: #FF69B4;\">\n                <span>\n                    Just, Click <a target=\"blank\" href=\"https://ereceipt.tn.gov.in/cmprf/cmprf.html\"> <u>here</u></a>\n                    for CMPRF and\n                    Click <a target=\"blank\" href=\"https://www.pmcares.gov.in/en/\"> <u>here</u></a> for PMPRF\n                    <mat-icon matSuffix class=\"thump-up normal-quote\">card_giftcard</mat-icon>\n                </span>\n            </h1>\n        </div>\n    </div>\n    <div class=\"row spacing mat-banner\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n            <mat-card class=\"quote\">\n                <h1><a>Stay Home: </a>\n                    <span class=\"normal-quote\">Happy Giving! Let's donate for our wellbeing and to help the society, If\n                        not us who? If not now when?\n                        <a>Stay Safe</a>\n                        <mat-icon matSuffix class=\"thump-up\">thumb_up</mat-icon>\n                    </span>\n                </h1>\n            </mat-card>\n        </div>\n    </div>\n    <div *ngIf=\"isSubmitted\" #thankCard>\n        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n            <video #teaser autoplay poster=\"\" loop=\"\" muted class=\"fit-page\">\n                <source src=\"../assets/humanity-animated-teaser.mp4\" type=\"video/mp4\">\n            </video>\n        </div>\n    </div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { Login } from '../shared/model';\nimport { Router } from '@angular/router';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CovidCareService } from '../service/covid-care.service';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n  auth: Login;\n  isError: boolean;\n  pocUsers: any[];\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  hide = true;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private router: Router, private _covidService: CovidCareService) {\n    this.auth = new Login();\n  }\n\n  ngOnInit(): void {\n    this.isError = false;\n  }\n\n  login(form) {\n    this._covidService.checkUserCredentials(form.value).subscribe((response: any) => {\n      if (response.Message === \"Inavlid UserName or Password\") {\n        this.isError = true;\n      } else {\n        localStorage.setItem(\"userInfo\", JSON.stringify(response.UserName));\n        this.router.navigateByUrl('/CovidCare');\n      }\n    },\n      (error: HttpErrorResponse) => {\n        this.isError = true;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"home-hero col-lg-12 col-md-12 col-sm-12\">\n            <div class=\"title\">\n                <h1 class=\"title-text\">United we stand! United we win!</h1>\n                <img class=\"title-logo\" src=\"../assets/Call_for_Code.svg\">\n            </div>\n        </div>\n    </div>\n</div>\n<form class=\"example-form\" #myform=\"ngForm\" (ngSubmit)=\"login(myform)\">\n    <div class=\"login-container\">\n        <div class=\"login-page\">\n            <div class=\"login\">\n                <img class=\"stay-home\" src=\"../assets/stay-home.webp\">\n                <mat-form-field class=\"example-full-width\">\n                    <input  name=\"phoneNumber\" matInput placeholder=\"Mobile Number\" autocomplete=\"off\" maxlength=\"10\" ngModel>\n                    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n                        Please enter a valid email address\n                    </mat-error>\n                    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n                        User Name is <strong>required!</strong>\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"example-full-width\">\n                    <input name=\"password\" #password matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\"\n                        autocomplete=\"off\" ngModel>\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </mat-form-field>\n                <span class=\"error-message\" *ngIf=\"isError\">Ahh! You missed something! Please try again.</span>\n                <button mat-button>Let's Get in <mat-icon matSuffix>\n                        favorite</mat-icon></button>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CovidCareService } from '../service/covid-care.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medical-needy-request',\n  templateUrl: './medical-needy-request.component.html',\n  styleUrls: ['./medical-needy-request.component.css']\n})\nexport class MedicalNeedyRequestComponent implements OnInit {\n  isError: boolean;\n\n  constructor(private router: Router, private _covidService: CovidCareService) { }\n\n  ngOnInit(): void {\n    this.isError = false;\n  }\n\n  medicalNeedy(form) {\n    this._covidService.postMedicalRequestData(form.value).subscribe((response: any) => {\n      if (response) {\n        this._covidService.needySubmissionStatus = true;\n        this.router.navigateByUrl('/CovidCare');\n      }\n    },\n      (error: HttpErrorResponse) => {\n        this.isError = true;\n      });\n  }\n\n}\n","<app-header></app-header>\n<div class=\"app-container\">\n    <div class=\"text-center medy-title\">\n        <h1>\n            We hear you and help you out! Please do let us know, what you're looking for???\n        </h1>\n    </div>\n</div>\n<div class=\"app-container theme\">\n    <div class=\"row quote spacing\">\n        <div class=\"col-lg-6 col-md-6 col-sm-6\">\n            <form #myform=\"ngForm\" (ngSubmit)=\"medicalNeedy(myform)\">\n                <div class=\"example-full-width\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Name</mat-label>\n                        <input name=\"patientName\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Age</mat-label>\n                        <input name=\"patientAge\" type=\"number\" matInput autocomplete=\"off\" maxlength=\"10\"\n                            placeholder=\"Ex. 9500909820\" ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Sex</mat-label>\n                        <br>\n                        <mat-radio-group aria-label=\"Select an option\">\n                            <mat-radio-button value=\"Male\">Male</mat-radio-button>\n                            <mat-radio-button value=\"Female\">Female</mat-radio-button>\n                        </mat-radio-group>\n                        <input autocomplete=\"off\" matInput hidden>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field hintLabel=\"Max 10 digits\" appearance=\"fill\">\n                        <mat-label>Enter Mobile Number</mat-label>\n                        <input name=\"patientPhoneNumber\" type=\"number\" matInput autocomplete=\"off\" maxlength=\"10\"\n                            placeholder=\"Ex. 9500909820\" pattern=\"[1-9]{1}[0-9]{9}\" required ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your Aadhar Number</mat-label>\n                        <input name=\"patientAadharNumber\" type=\"number\" matInput autocomplete=\"off\" maxlength=\"10\"\n                            placeholder=\"Ex. 2121\" pattern=\"[1-9]{1}[0-9]{9}\" required ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>City/Village</mat-label>\n                        <input name=\"patientCity\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>District</mat-label>\n                        <input name=\"patientDistrict\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Diagnosed with</mat-label>\n                        <input autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Are you looking for?</mat-label>\n                        <mat-select>\n                            <mat-option value=\"option\">Medical Need</mat-option>\n                            <mat-option value=\"option\">Doctor Checkup</mat-option>\n                            <mat-option value=\"option\">Medical Need with Doctor Checkup</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter list of Medical Drug Name with Quantity</mat-label>\n                        <textarea #improve class=\"auto-resize\" matInput cdkTextareaAutosize\n                            #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"2\" cdkAutosizeMaxRows=\"5\"></textarea>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Doctor Name & Contact Number</mat-label>\n                        <input name=\"doctorName\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Please mention your area elected ward member/counselor Name & Contact Number\n                        </mat-label>\n                        <input name=\"wardContact\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <div class=\"center-align\">\n                        <button mat-raised-button color=\"primary\">I'm done and let me Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"col-lg-6 col-md-6 col-sm-6 section-splitter\">\n            <h1 class=\"center-align\" style=\"color: #FF69B4\">\"Prevention is better than cure! Look at a glance.\"</h1>\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"who-thought\" src=\"../assets/who_medical_need.jpeg\">\n            </div>\n            <br>\n            <br>\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"tn-health-thought\" src=\"../assets/mohfw-ec.png\">\n            </div>\n            <br>\n            <h1 style=\"color: #0033A0; background: darkturquoise\">\n                <span>WHO Health Alert on #COVID19 is now active on Messenger\n                    <a target=\"blank\" href=\"http://messenger.com/t/WHO\">\n                        <mat-icon matSuffix class=\"thump-up\">chat_bubble</mat-icon>\n                    </a>\n                    Stay informed and get accurate information about #Coronavirus!\n                </span>\n            </h1>\n\n        </div>\n        <div class=\"row spacing\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <mat-card class=\"mat-quote\">\n                    <h1>Stay Home:\n                        <span class=\"normal-quote\">Thanks for using Covid Care WebApp to submit your needy request,\n                            we'll get back you soon on this!\n                            <a>Be The Change</a>\n                            <mat-icon matSuffix class=\"thump-up\">thumb_up</mat-icon>\n                        </span>\n                    </h1>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CovidCareService } from '../service/covid-care.service';\n\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.css']\n})\nexport class RegistrationPageComponent implements OnInit {\n  isError: boolean;\n  email = new FormControl('', [Validators.required, Validators.email]);\n  hide = true;\n  constructor(private router: Router, private _covidService: CovidCareService) { }\n\n  ngOnInit(): void {\n    this.isError = false;\n  }\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  register(form) {\n    this._covidService.postUseRegistration(form.value).subscribe((response: any) => {\n      if (response.Message) {\n        //localStorage.setItem(\"userInfo\", JSON.stringify(response));\n        this.router.navigateByUrl('/login');\n      }\n    },\n      (error: HttpErrorResponse) => {\n        this.isError = true;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 signup-banner\">\n            <div class=\"title\">\n                <h1 class=\"headsup\">Hello! How do you do? We're here to help you..!</h1>\n                <br />\n                <form #myform=\"ngForm\" (ngSubmit)=\"register(myform)\">\n                        <div class=\"example-container\">\n                                <mat-form-field appearance=\"fill\">\n                                    <mat-label>Name</mat-label>\n                                    <input name=\"customerName\" autocomplete=\"off\" matInput ngModel>\n                                </mat-form-field>\n                                <br>\n                                <mat-form-field appearance=\"fill\">\n                                        <mat-label>Enter your email</mat-label>\n                                        <input name=\"email\" autocomplete=\"off\" matInput placeholder=\"pat@example.com\" ngModel>\n                                        <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n                                </mat-form-field>\n                                <br>\n                                <mat-form-field hintLabel=\"Max 10 characters\" appearance=\"fill\">\n                                    <mat-label>Enter Mobile Number</mat-label>\n                                    <input name=\"phoneNumber\" autocomplete=\"off\" matInput #input maxlength=\"10\" placeholder=\"Ex. 9500909820\" required ngModel>\n                                    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\n                                </mat-form-field>\n                                <br>\n                                <mat-form-field appearance=\"fill\">\n                                    <mat-label>Create Password</mat-label>\n                                    <input name=\"password\" matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\" autocomplete=\"off\" ngModel>\n                                    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </mat-form-field>\n                                <br>\n                                <mat-form-field appearance=\"fill\">\n                                    <mat-label>Select</mat-label>\n                                    <mat-select  name=\"userType\" ngModel>\n                                        <mat-option value=\"User\">User</mat-option>\n                                        <mat-option value=\"Guest\">Guest</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <br>\n                                <div class=\"example-button-row\">\n                                    <button mat-raised-button >Submit</button>\n                                </div>\n                            </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Registration, Login, GeneralNeed, MedicalNeed} from '../shared/model';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nconst header = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n//const host = \"http://localhost:8080\";\nconst host = \"http://connectneedycovid19.eu-gb.cf.appdomain.cloud\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidCareService {\n  public needySubmissionStatus: boolean = false;\n  private http: HttpClient;\n  public apiUrl: string;\n\n  constructor(private _http: HttpClient) {\n    this.http = _http;\n    this.apiUrl = host;\n  }\n\n  /* Submit user Registration on POST */\n  public postUseRegistration(userReg: Registration): any {\n    this.apiUrl = host + '/register';\n    return this.http.post(this.apiUrl, userReg, header)\n      .pipe(catchError((error: any) => Observable.throw(error.json().error || 'Server error'))) //...errors if any\n  }\n\n   /* Check user login credentials */\n   public checkUserCredentials(loginData: Login): any {\n    this.apiUrl = host + '/login?' + 'phoneNumber=' + loginData.phoneNumber + '&password=' + loginData.password;\n    return this.http.get(this.apiUrl)\n      .pipe(catchError((error: any) => Observable.throw(error.json().error || 'Server error'))) //...errors if any\n  }\n\n\n  /* To check whether user medical request sucessful or not*/\n  public checkMedicalRequests(): any {\n    this.apiUrl = host + '/findAllMedicalRequests';\n    return this.http.get(this.apiUrl);\n  }\n\n   /* Submit user medical request on POST */\n   public postMedicalRequestData(userData: MedicalNeed): any {\n    this.apiUrl = host + '/medicalRequestCapture';\n    return this.http.post(this.apiUrl, userData, header)\n      .pipe(catchError((error: any) => Observable.throw(error.json().error || 'Server error'))) //...errors if any\n  }\n\n   /* To check whether user general request sucessful or not*/\n   public checkGeneralRequests(): any {\n    this.apiUrl = host + '/findAllGeneralRequests';\n    return this.http.get(this.apiUrl);\n  }\n\n   /* Submit user general request on POST */\n   public postGenralRequestData(userData: GeneralNeed): any {\n    this.apiUrl = host + '/generalRequestCapture';\n    return this.http.post(this.apiUrl, userData, header)\n      .pipe(catchError((error: any) => Observable.throw(error.json().error || 'Server error'))) //...errors if any\n  }\n}\n","export class Registration {\n    customerName: string;\n    email: string;\n    phoneNumber: number;\n    password: string;\n    userType: string;\n}\nexport class Login {\n    phoneNumber: number;\n    password: string;\n}\n\nexport class Role {\n    phoneNumber: string;\n    Role: string;\n}\n\nexport class MedicalNeed {\n    medicalRequestId: number;\n    patientName: string;\n    patientAge: string;\n    patientGender: string;\n    patientPhoneNumber: number;\n    patientAadharNumber: number;\n    patientCity: string;\n    patientDistrict: string;\n    diagnosed: string;\n    patientNeeds: string;\n    drugName:string;\n    drugQuantity: number;\n    doctorName: string;\n    wardContact: string;\n}\n\nexport class GeneralNeed {\n    generalRequestId: number;\n    userName: string;\n    userNeeds: string;\n    isEmergency: boolean;\n    phoneNumber: number;\n    aadharNumber: number;\n    userCity: string;\n    userDistrict: string;\n    userState: string;\n    goodsName: string;\n    generalHelp: string;\n    drugName:string;\n    distributorContact: string;\n    wardContact: string;\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CovidCareService } from '../service/covid-care.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-request-page',\n  templateUrl: './user-request-page.component.html',\n  styleUrls: ['./user-request-page.component.css']\n})\nexport class UserRequestPageComponent implements OnInit {\n  isError: boolean;\n  email = new FormControl('', [Validators.required, Validators.email]);\n  hide = true;\n  \n  constructor(private router: Router,private _covidService: CovidCareService) { }\n\n  ngOnInit(): void {\n    this.isError = false;\n  }\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  generalNeedy(form) {\n    this._covidService.postGenralRequestData(form.value).subscribe((response: any) => {\n      if (response) {\n        this._covidService.needySubmissionStatus = true;\n        this.router.navigateByUrl('/CovidCare');\n      }\n    },\n      (error: HttpErrorResponse) => {\n        this.isError = true;\n      });\n  }\n\n}\n","<app-header></app-header>\n<div class=\"app-container\">\n    <div class=\"text-center medy-title\">\n        <h1>\n            We hear you and help you out! Please do let us know, what you're looking for???\n        </h1>\n    </div>\n</div>\n<div class=\"app-container theme\">\n    <div class=\"row quote spacing\">\n        <div class=\"col-lg-6 col-md-6 col-sm-6 section-splitter\">\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"tn-health-thought\" src=\"../assets/groceries.jpg\">\n            </div>\n            <br>\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"tn-health-thought\" src=\"../assets/groceries-store.jpg\">\n            </div>\n            <br>\n            <div class=\"event-upload\">\n                <img class=\"upload-image\" alt=\"tn-health-thought\" src=\"../assets/farmers-goods.jpg\">\n            </div>\n        </div>\n        <div class=\"col-lg-6 col-md-6 col-sm-6\">\n            <form #myform=\"ngForm\" (ngSubmit)=\"generalNeedy(myform)\">\n                <div class=\"example-full-width\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Name</mat-label>\n                        <input name=\"userName\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Are you looking for?</mat-label>\n                        <mat-select name=\"userNeeds\" ngModel>\n                            <mat-option value=\"Groceries\">Groceries</mat-option>\n                            <mat-option value=\"To sell Farmer's Goods\">To sell Farmer's Goods</mat-option>\n                            <mat-option value=\"General Help\">General Help</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Is this Emergency!</mat-label>\n                        <br>\n                        <mat-radio-group name=\"isEmergency\" ngModel aria-label=\"Select an option\">\n                            <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                            <mat-radio-button value=\"No\">No</mat-radio-button>\n                        </mat-radio-group>\n                        <input autocomplete=\"off\" matInput hidden>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter Mobile Number</mat-label>\n                        <input name=\"phoneNumber\" type=\"number\" matInput autocomplete=\"off\" maxlength=\"10\"\n                            placeholder=\"Ex. 9500909820\" pattern=\"[1-9]{1}[0-9]{9}\" ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your Aadhar Number</mat-label>\n                        <input name=\"aadharNumber\" type=\"number\" matInput autocomplete=\"off\" maxlength=\"10\"\n                            placeholder=\"Ex. 2121\" required ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>City/Village</mat-label>\n                        <input name=\"userCity\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>District</mat-label>\n                        <input name=\"userDistrict\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>State</mat-label>\n                        <input name=\"userState\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter list of Products with Quantity</mat-label>\n                        <textarea  name=\"goodsName\" class=\"auto-resize\" matInput cdkTextareaAutosize\n                            #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"2\" cdkAutosizeMaxRows=\"5\" ngModel></textarea>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>In case of general help, please give more details below.</mat-label>\n                        <textarea name=\"generalHelp\" class=\"auto-resize\" matInput cdkTextareaAutosize\n                            #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"2\" cdkAutosizeMaxRows=\"5\" ngModel></textarea>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Please mention your nearest Retail Store Name & Conatct if any!\n                        </mat-label>\n                        <input name=\"distributorContact\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Please mention your area elected ward member/counselor Name & Mobile Number\n                        </mat-label>\n                        <input name=\"wardContact\" autocomplete=\"off\" matInput ngModel>\n                    </mat-form-field>\n                    <br>\n                    <div class=\"center-align\">\n                        <button mat-raised-button color=\"primary\">I'm done and let me Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"row spacing mat-banner\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <mat-card class=\"mat-quote\">\n                    <h1>Stay Home:\n                        <span class=\"normal-quote\">Thanks for using Covid Care WebApp to submit your needy request,\n                            we'll get back you soon on this!\n                            <a>Be The Change</a>\n                            <mat-icon matSuffix class=\"thump-up\">thumb_up</mat-icon>\n                        </span>\n                    </h1>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}